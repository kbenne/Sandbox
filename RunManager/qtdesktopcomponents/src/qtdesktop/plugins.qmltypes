import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated with the command 'qmlplugindump QtDesktop 1.0 imports/'.

Module {
    Component {
        name: "QDesktopItem"
        prototype: "QObject"
        exports: ["Desktop 1.0"]
        Property { name: "screenWidth"; type: "int"; isReadonly: true }
        Property { name: "screenHeight"; type: "int"; isReadonly: true }
        Property { name: "availableWidth"; type: "int"; isReadonly: true }
        Property { name: "availableHeight"; type: "int"; isReadonly: true }
        Property { name: "screenCount"; type: "int"; isReadonly: true }
        Signal { name: "screenGeometryChanged" }
        Signal { name: "availableGeometryChanged" }
        Method {
            name: "screenGeometry"
            type: "QRect"
            Parameter { name: "screen"; type: "int" }
        }
        Method {
            name: "availableGeometry"
            type: "QRect"
            Parameter { name: "screen"; type: "int" }
        }
    }
    Component {
        name: "QFileDialogItem"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["FileDialog 1.0"]
        Property { name: "visible"; type: "bool" }
        Property { name: "modal"; type: "bool" }
        Property { name: "title"; type: "string" }
        Property { name: "selectExisting"; type: "bool" }
        Property { name: "selectMultiple"; type: "bool" }
        Property { name: "selectFolder"; type: "bool" }
        Property { name: "folder"; type: "string" }
        Property { name: "nameFilters"; type: "QStringList" }
        Property { name: "filePath"; type: "string"; isReadonly: true }
        Property { name: "filePaths"; type: "QStringList"; isReadonly: true }
        Signal { name: "modalityChanged" }
        Signal { name: "accepted" }
        Signal { name: "rejected" }
        Method { name: "open" }
        Method { name: "close" }
    }
    Component {
        name: "QFileSystemModel"
        prototype: "QAbstractItemModel"
        exports: ["FileSystemModel 1.0"]
        Property { name: "resolveSymlinks"; type: "bool" }
        Property { name: "readOnly"; type: "bool" }
        Property { name: "nameFilterDisables"; type: "bool" }
        Signal {
            name: "rootPathChanged"
            Parameter { name: "newPath"; type: "string" }
        }
        Signal {
            name: "fileRenamed"
            Parameter { name: "path"; type: "string" }
            Parameter { name: "oldName"; type: "string" }
            Parameter { name: "newName"; type: "string" }
        }
        Signal {
            name: "directoryLoaded"
            Parameter { name: "path"; type: "string" }
        }
    }
    Component {
        name: "QQuickComponentsColumnLayout"
        defaultProperty: "data"
        prototype: "QQuickComponentsLinearLayout"
        exports: ["ColumnLayout 1.0"]
    }
    Component {
        name: "QQuickComponentsLayout"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Layout 1.0"]
        attachedType: "QQuickComponentsLayoutAttached"
        Enum {
            name: "SizePolicy"
            values: {
                "Fixed": 0,
                "Expanding": 1
            }
        }
    }
    Component {
        name: "QQuickComponentsLayoutAttached"
        prototype: "QObject"
        Property { name: "minimumWidth"; type: "double" }
        Property { name: "minimumHeight"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "maximumHeight"; type: "double" }
        Property { name: "verticalSizePolicy"; type: "QQuickComponentsLayout::SizePolicy" }
        Property { name: "horizontalSizePolicy"; type: "QQuickComponentsLayout::SizePolicy" }
    }
    Component {
        name: "QQuickComponentsLinearLayout"
        defaultProperty: "data"
        prototype: "QQuickComponentsLayout"
        Property { name: "spacing"; type: "double" }
        Signal { name: "orientationChanged" }
    }
    Component {
        name: "QQuickComponentsPrivate"
        prototype: "QObject"
        exports: ["PrivateHelper 1.0"]
        Method {
            name: "showToolTip"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "pos"; type: "QPointF" }
            Parameter { name: "text"; type: "string" }
        }
        Method { name: "hideToolTip" }
    }
    Component {
        name: "QQuickComponentsRowLayout"
        defaultProperty: "data"
        prototype: "QQuickComponentsLinearLayout"
        exports: ["RowLayout 1.0"]
    }
    Component {
        name: "QRangeModel"
        prototype: "QObject"
        exports: ["RangeModel 1.0"]
        Property { name: "value"; type: "double" }
        Property { name: "minimumValue"; type: "double" }
        Property { name: "maximumValue"; type: "double" }
        Property { name: "stepSize"; type: "double" }
        Property { name: "position"; type: "double" }
        Property { name: "positionAtMinimum"; type: "double" }
        Property { name: "positionAtMaximum"; type: "double" }
        Property { name: "inverted"; type: "bool" }
        Signal {
            name: "valueChanged"
            Parameter { name: "value"; type: "double" }
        }
        Signal {
            name: "positionChanged"
            Parameter { name: "position"; type: "double" }
        }
        Signal {
            name: "stepSizeChanged"
            Parameter { name: "stepSize"; type: "double" }
        }
        Signal {
            name: "invertedChanged"
            Parameter { name: "inverted"; type: "bool" }
        }
        Signal {
            name: "minimumChanged"
            Parameter { name: "min"; type: "double" }
        }
        Signal {
            name: "maximumChanged"
            Parameter { name: "max"; type: "double" }
        }
        Signal {
            name: "positionAtMinimumChanged"
            Parameter { name: "min"; type: "double" }
        }
        Signal {
            name: "positionAtMaximumChanged"
            Parameter { name: "max"; type: "double" }
        }
        Method { name: "toMinimum" }
        Method { name: "toMaximum" }
        Method {
            name: "setValue"
            Parameter { name: "value"; type: "double" }
        }
        Method {
            name: "setPosition"
            Parameter { name: "position"; type: "double" }
        }
        Method {
            name: "valueForPosition"
            type: "double"
            Parameter { name: "position"; type: "double" }
        }
        Method {
            name: "positionForValue"
            type: "double"
            Parameter { name: "value"; type: "double" }
        }
    }
    Component {
        name: "QStyleItem"
        defaultProperty: "data"
        prototype: "QQuickPaintedItem"
        exports: ["StyleItem 1.0"]
        Property { name: "sunken"; type: "bool" }
        Property { name: "raised"; type: "bool" }
        Property { name: "active"; type: "bool" }
        Property { name: "selected"; type: "bool" }
        Property { name: "hasFocus"; type: "bool" }
        Property { name: "on"; type: "bool" }
        Property { name: "hover"; type: "bool" }
        Property { name: "horizontal"; type: "bool" }
        Property { name: "elementType"; type: "string" }
        Property { name: "text"; type: "string" }
        Property { name: "activeControl"; type: "string" }
        Property { name: "info"; type: "string" }
        Property { name: "style"; type: "string"; isReadonly: true }
        Property { name: "hint"; type: "string" }
        Property { name: "font"; type: "QFont"; isReadonly: true }
        Property { name: "minimum"; type: "int" }
        Property { name: "maximum"; type: "int" }
        Property { name: "value"; type: "int" }
        Property { name: "step"; type: "int" }
        Property { name: "paintMargins"; type: "int" }
        Property { name: "contentWidth"; type: "int" }
        Property { name: "contentHeight"; type: "int" }
        Signal {
            name: "contentWidthChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "contentHeightChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "pixelMetric"
            type: "int"
            Parameter { type: "string" }
        }
        Method {
            name: "styleHint"
            type: "QVariant"
            Parameter { type: "string" }
        }
        Method { name: "updateSizeHint" }
        Method { name: "updateItem" }
        Method {
            name: "hitTest"
            type: "string"
            Parameter { name: "x"; type: "int" }
            Parameter { name: "y"; type: "int" }
        }
        Method {
            name: "subControlRect"
            type: "QRectF"
            Parameter { name: "subcontrolString"; type: "string" }
        }
        Method {
            name: "elidedText"
            type: "string"
            Parameter { name: "text"; type: "string" }
            Parameter { name: "elideMode"; type: "int" }
            Parameter { name: "width"; type: "int" }
        }
        Method {
            name: "textWidth"
            type: "int"
            Parameter { type: "string" }
        }
        Method {
            name: "hasThemeIcon"
            type: "bool"
            Parameter { type: "string" }
        }
        Method {
            name: "setContentWidth"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "setContentHeight"
            Parameter { name: "arg"; type: "int" }
        }
    }
    Component {
        name: "QWheelArea"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["WheelArea 1.0"]
        Property { name: "verticalDelta"; type: "double" }
        Property { name: "horizontalDelta"; type: "double" }
        Property { name: "horizontalMinimumValue"; type: "double" }
        Property { name: "horizontalMaximumValue"; type: "double" }
        Property { name: "verticalMinimumValue"; type: "double" }
        Property { name: "verticalMaximumValue"; type: "double" }
        Property { name: "horizontalValue"; type: "double" }
        Property { name: "verticalValue"; type: "double" }
        Property { name: "scrollSpeed"; type: "double" }
        Signal { name: "verticalWheelMoved" }
        Signal { name: "horizontalWheelMoved" }
    }
    Component {
        name: "QWindowItem"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Window 0.1", "Window 1.0"]
        Property { name: "minimumHeight"; type: "int" }
        Property { name: "maximumHeight"; type: "int" }
        Property { name: "minimumWidth"; type: "int" }
        Property { name: "maximumWidth"; type: "int" }
        Property { name: "visible"; type: "bool" }
        Property { name: "windowDecoration"; type: "bool" }
        Property { name: "modal"; type: "bool" }
        Property { name: "deleteOnClose"; type: "bool" }
        Property { name: "windowState"; type: "Qt::WindowState" }
        Property { name: "title"; type: "string" }
        Signal { name: "modalityChanged" }
        Method { name: "close" }
    }
    Component {
        name: "QtMenu"
        defaultProperty: "menuItems"
        prototype: "QtMenuBase"
        exports: ["Menu 1.0"]
        Property { name: "text"; type: "string" }
        Property { name: "model"; type: "QVariant" }
        Property { name: "selectedIndex"; type: "int" }
        Property { name: "hoveredIndex"; type: "int" }
        Property { name: "menuItems"; type: "QtMenuBase"; isList: true; isReadonly: true }
        Signal { name: "menuClosed" }
        Signal {
            name: "modelChanged"
            Parameter { name: "newModel"; type: "QVariant" }
        }
        Signal { name: "rebuldMenu" }
        Method {
            name: "setModel"
            Parameter { name: "newModel"; type: "QVariant" }
        }
        Method { name: "minimumWidth"; type: "int" }
        Method {
            name: "setMinimumWidth"
            Parameter { name: "w"; type: "int" }
        }
        Method {
            name: "showPopup"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
            Parameter { name: "atActionIndex"; type: "int" }
        }
        Method {
            name: "showPopup"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method { name: "hidePopup" }
        Method { name: "clearMenuItems" }
        Method {
            name: "addMenuItem"
            Parameter { name: "text"; type: "string" }
        }
        Method {
            name: "itemTextAt"
            type: "string"
            Parameter { name: "index"; type: "int" }
        }
        Method {
            name: "modelTextAt"
            type: "string"
            Parameter { name: "index"; type: "int" }
        }
        Method { name: "modelCount"; type: "int" }
        Method { name: "hasNativeModel"; type: "bool" }
    }
    Component {
        name: "QtMenuBar"
        defaultProperty: "menus"
        prototype: "QQuickItem"
        exports: ["MenuBar 1.0"]
        Property { name: "menus"; type: "QtMenu"; isList: true; isReadonly: true }
    }
    Component {
        name: "QtMenuBase"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["NativeMenuBase 0.1"]
        Property { name: "iconSource"; type: "QUrl" }
        Property { name: "iconName"; type: "string" }
    }
    Component {
        name: "QtMenuItem"
        defaultProperty: "data"
        prototype: "QtMenuBase"
        exports: ["MenuItem 1.0"]
        Property { name: "text"; type: "string" }
        Property { name: "shortcut"; type: "string" }
        Property { name: "checkable"; type: "bool" }
        Property { name: "checked"; type: "bool" }
        Property { name: "enabled"; type: "bool" }
        Signal { name: "triggered" }
        Signal {
            name: "toggled"
            Parameter { type: "bool" }
        }
    }
    Component {
        name: "QtMenuSeparator"
        defaultProperty: "data"
        prototype: "QtMenuBase"
        exports: ["Separator 1.0"]
    }
    Component {
        name: "QtSplitterAttached"
        prototype: "QObject"
        Property { name: "minimumWidth"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "minimumHeight"; type: "double" }
        Property { name: "maximumHeight"; type: "double" }
        Property { name: "percentageSize"; type: "double" }
        Property { name: "expanding"; type: "bool" }
        Property { name: "itemIndex"; type: "int" }
        Signal {
            name: "minimumWidthChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "maximumWidthChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "minimumHeightChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "maximumHeightChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "expandingChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Signal {
            name: "percentageWidthSize"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "itemIndexChanged"
            Parameter { name: "arg"; type: "int" }
        }
    }
    Component {
        name: "QtSplitterBase"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["Splitter 1.0"]
        attachedType: "QtSplitterAttached"
    }
}
